#ifndef __mt8173_HDMI_DRV_H__
#define __mt8173_HDMI_DRV_H__

#ifndef FALSE
#define FALSE   0
#endif

#ifndef TRUE
#define TRUE    1
#endif

typedef  enum {
	HDMI_VIDEO_720x480p_60Hz=0,  // 0
	HDMI_VIDEO_720x576p_50Hz,    // 1
	HDMI_VIDEO_1280x720p_60Hz,   // 2
	HDMI_VIDEO_1280x720p_50Hz,   // 3
	HDMI_VIDEO_1920x1080i_60Hz,  // 4
	HDMI_VIDEO_1920x1080i_50Hz,  // 5
	HDMI_VIDEO_1920x1080p_30Hz,  // 6
	HDMI_VIDEO_1920x1080p_25Hz,  // 7
	HDMI_VIDEO_1920x1080p_24Hz,  // 8
	HDMI_VIDEO_1920x1080p_23Hz,  // 9
	HDMI_VIDEO_1920x1080p_29Hz,  // a
	HDMI_VIDEO_1920x1080p_60Hz,  // b
	HDMI_VIDEO_1920x1080p_50Hz,  // c

	HDMI_VIDEO_1280x720p3d_60Hz,   // d
	HDMI_VIDEO_1280x720p3d_50Hz,   // e
	HDMI_VIDEO_1920x1080i3d_60Hz,  // f
	HDMI_VIDEO_1920x1080i3d_50Hz,  // 10
	HDMI_VIDEO_1920x1080p3d_24Hz,  // 11
	HDMI_VIDEO_1920x1080p3d_23Hz,  // 12
	/*the 2160 mean 3840x2160 */
	HDMI_VIDEO_2160P_23_976HZ,//13
	HDMI_VIDEO_2160P_24HZ,//14
	HDMI_VIDEO_2160P_25HZ,//15
	HDMI_VIDEO_2160P_29_97HZ,//16
	HDMI_VIDEO_2160P_30HZ,//17
	/*the 2161 mean 4096x2160 */
	HDMI_VIDEO_2161P_24HZ,//18

	HDMI_VIDEO_RESOLUTION_NUM
}   HDMI_VIDEO_RESOLUTION;


#define IS_INTERLACE_OUTPUT_LK(res) (((res) == HDMI_VIDEO_1920x1080i_60Hz) \
|| ((res) == HDMI_VIDEO_1920x1080i_50Hz) \
/*|| ((res) == HDMI_VIDEO_720x480i_60Hz) \
|| ((res) == HDMI_VIDEO_720x576i_50Hz) */)

static unsigned int hdmi_res_param_table_lk[][3] = {
	{720,   480,    60}, // HDMI_VIDEO_720x480p_60Hz 0
	{720,   576,    50}, // HDMI_VIDEO_720x576p_50Hz 1
	{1280,  720,    60}, // HDMI_VIDEO_1280x720p_60Hz 2
	{1280,  720,    50}, // HDMI_VIDEO_1280x720p_50Hz  3

	{1920,  1080,   60}, // 4
	{1920,  1080,   50}, // 5
	{1920,  1080,   30}, // 6
	{1920,  1080,   25}, // 7
	{1920,  1080,   24}, // 8
	{1920,  1080,   23}, // 9
	{1920,  1080,   29}, // 0xa
	{1920,  1080,   60}, // 0xb
	{1920,  1080,   50}, // 0xc

	{1280,  720,    60}, // 0xd
	{1280,  720,    50}, // 0xe

	{1920,  1080,   60}, // 0xf
	{1920,  1080,   50}, // 0x10
	{1920,  1080,   24}, // 0x11
	{1920,  1080,   23}, // 0x12
	//{720,   480,    60},
	//{720,   576,    50},
	{3840,  2160,   23}, // 0x13
	{3840,  2160,   24}, // 0x14
	{3840,  2160,   25}, // 0x15
	{3840,  2160,   29}, // 0x16
	{3840,  2160,   30}, // 0x17

	{4096,  2160,   24}, // 0x18
};


static const unsigned char HDMI_VIDEO_ID_CODE[HDMI_VIDEO_RESOLUTION_NUM]=
{2, 17,  4, 19, 5, 20, 34,33,32, 32, 34, 16,31};//, , 480P,576P, ,, , ,720P60,720P50,1080I60,1080I50,,,1080P30,1080P25, , , 1080P24, 1080P23.97, 1080P29.97, 1080p60,1080p50

static const unsigned char PREDIV[3][4]= {
	{0x0, 0x0, 0x0, 0x0},    // 27Mhz
	{0x1, 0x1, 0x1, 0x1},    //74Mhz
	{0x1, 0x1, 0x1, 0x1}     //148Mhz
};

static const unsigned char TXDIV[3][4]= {
	{0x3, 0x3, 0x3, 0x2},    // 27Mhz
	{0x2, 0x1, 0x1, 0x1},    //74Mhz
	{0x1, 0x0, 0x0, 0x0}     //148Mhz
};

static const unsigned char POSDIV[3][4]= {
	{0x3, 0x3, 0x3, 0x3},    // 27Mhz
	{0x3, 0x3, 0x3, 0x3},    //74Mhz
	{0x3, 0x3, 0x3, 0x3}     //148Mhz
};

static const unsigned char FBKSEL[3][4]= {
	{0x1, 0x1, 0x1, 0x1},    // 27Mhz
	{0x1, 0x0, 0x1, 0x1},    //74Mhz
	{0x1, 0x0, 0x1, 0x1}     //148Mhz
};

static const unsigned char FBKDIV[3][4]= {
	{19, 24, 29, 19},    // 27Mhz
	{19, 24, 14, 19},    //74Mhz
	{19, 24, 14, 19}     //148Mhz
};

static const unsigned char DIVEN[3][4]= {
	{0x2, 0x1, 0x1, 0x2},    // 27Mhz
	{0x2, 0x2, 0x2, 0x2},    //74Mhz
	{0x2, 0x2, 0x2, 0x2}     //148Mhz
};

static const unsigned char HTPLLBP[3][4]= {
	{0xc, 0xc, 0x8, 0xc},    // 27Mhz
	{0xc, 0xf, 0xf, 0xc},    //74Mhz
	{0xc, 0xf, 0xf, 0xc}     //148Mhz
};

static const unsigned char HTPLLBC[3][4]= {
	{0x2, 0x3, 0x3, 0x2},    // 27Mhz
	{0x2, 0x3, 0x3, 0x2},    //74Mhz
	{0x2, 0x3, 0x3, 0x2}     //148Mhz
};

static const unsigned char HTPLLBR[3][4]= {
	{0x1, 0x1, 0x0, 0x1},    // 27Mhz
	{0x1, 0x2, 0x2, 0x1},    //74Mhz
	{0x1, 0x2, 0x2, 0x1}     //148Mhz
};

static const unsigned char HTPLLIC[3][4]= {
	{0x1, 0x1, 0x1, 0x1},    // 27Mhz
	{0x1, 0x1, 0x1, 0x1},    //74Mhz
	{0x1, 0x1, 0x1, 0x1}     //148Mhz
};

static const unsigned char HTPLLIR[3][4]= {
	{0x1, 0x1, 0x1, 0x1},    // 27Mhz
	{0x1, 0x1, 0x1, 0x1},    //74Mhz
	{0x1, 0x1, 0x1, 0x1}     //148Mhz
};


#define NCTS_BYTES          0x07
static const unsigned char HDMI_NCTS[7][9][NCTS_BYTES] = {
	{	{0x00, 0x00, 0x69, 0x78, 0x00, 0x10, 0x00},    /* 32K, 480i/576i/480p@27MHz/576p@27MHz */
		{0x00, 0x00, 0xd2, 0xf0, 0x00, 0x10, 0x00},    /* 32K, 480p@54MHz/576p@54MHz */
		{0x00, 0x03, 0x37, 0xf9, 0x00, 0x2d, 0x80},    /* 32K, 720p@60/1080i@60 */
		{0x00, 0x01, 0x22, 0x0a, 0x00, 0x10, 0x00},    /* 32K, 720p@50/1080i@50 */
		{0x00, 0x06, 0x6f, 0xf3, 0x00, 0x2d, 0x80},    /* 32K, 1080p@60 */
		{0x00, 0x02, 0x44, 0x14, 0x00, 0x10, 0x00},    /* 32K, 1080p@50 */
		{0x00, 0x01, 0xA5, 0xe0, 0x00, 0x10, 0x00},    /* 32K, 480p@108MHz/576p@108MHz */
		{0x00, 0x06, 0x6F, 0xF3, 0x00, 0x16, 0xC0},    /* 32K, 296.976m,4K2K */
		{0x00, 0x03, 0x66, 0x1E, 0x00, 0x0C, 0x00} /* 32K, 297m */
	},
	{	{0x00, 0x00, 0x75, 0x30, 0x00, 0x18, 0x80},    /* 44K, 480i/576i/480p@27MHz/576p@27MHz */
		{0x00, 0x00, 0xea, 0x60, 0x00, 0x18, 0x80},    /* 44K, 480p@54MHz/576p@54MHz */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x45, 0xac},    /* 44K, 720p@60/1080i@60 */
		{0x00, 0x01, 0x42, 0x44, 0x00, 0x18, 0x80},    /* 44K, 720p@50/1080i@50 */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x22, 0xd6},    /* 44K, 1080p@60 */
		{0x00, 0x02, 0x84, 0x88, 0x00, 0x18, 0x80},    /* 44K, 1080p@50 */
		{0x00, 0x01, 0xd4, 0xc0, 0x00, 0x18, 0x80},    /* 44K, 480p@108MHz/576p@108MHz */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x11, 0x6B},    /* 44K, 296.976m,4K2K */
		{0x00, 0x03, 0xC6, 0xCC, 0x00, 0x12, 0x60} /* 44K, 297m */
	},
	{	{0x00, 0x00, 0x69, 0x78, 0x00, 0x18, 0x00},    /* 48K, 480i/576i/480p@27MHz/576p@27MHz */
		{0x00, 0x00, 0xd2, 0xf0, 0x00, 0x18, 0x00},    /* 48K, 480p@54MHz/576p@54MHz */
		{0x00, 0x02, 0x25, 0x51, 0x00, 0x2d, 0x80},    /* 48K, 720p@60/1080i@60 */
		{0x00, 0x01, 0x22, 0x0a, 0x00, 0x18, 0x00},    /* 48K, 720p@50/1080i@50 */
		{0x00, 0x02, 0x25, 0x51, 0x00, 0x16, 0xc0},    /* 48K, 1080p@60 */
		{0x00, 0x02, 0x44, 0x14, 0x00, 0x18, 0x00},    /* 48K, 1080p@50 */
		{0x00, 0x01, 0xA5, 0xe0, 0x00, 0x18, 0x00},    /* 48K, 108p@54MHz/576p@108MHz */
		{0x00, 0x04, 0x4A, 0xA2, 0x00, 0x16, 0xC0},    /* 48K, 296.976m,4K2K */
		{0x00, 0x03, 0xC6, 0xCC, 0x00, 0x14, 0x00} /* 48K, 297m */
	},
	{	{0x00, 0x00, 0x75, 0x30, 0x00, 0x31, 0x00},    /* 88K 480i/576i/480p@27MHz/576p@27MHz */
		{0x00, 0x00, 0xea, 0x60, 0x00, 0x31, 0x00},    /* 88K 480p@54MHz/576p@54MHz */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x8b, 0x58},    /* 88K, 720p@60/1080i@60 */
		{0x00, 0x01, 0x42, 0x44, 0x00, 0x31, 0x00},    /* 88K, 720p@50/1080i@50 */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x45, 0xac},    /* 88K, 1080p@60 */
		{0x00, 0x02, 0x84, 0x88, 0x00, 0x31, 0x00},    /* 88K, 1080p@50 */
		{0x00, 0x01, 0xd4, 0xc0, 0x00, 0x31, 0x00},    /* 88K 480p@108MHz/576p@108MHz */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x22, 0xD6},    /* 88K, 296.976m,4K2K */
		{0x00, 0x03, 0xC6, 0xCC, 0x00, 0x24, 0xC0} /* 88K, 297m */
	},
	{	{0x00, 0x00, 0x69, 0x78, 0x00, 0x30, 0x00},    /* 96K, 480i/576i/480p@27MHz/576p@27MHz */
		{0x00, 0x00, 0xd2, 0xf0, 0x00, 0x30, 0x00},    /* 96K, 480p@54MHz/576p@54MHz */
		{0x00, 0x02, 0x25, 0x51, 0x00, 0x5b, 0x00},    /* 96K, 720p@60/1080i@60 */
		{0x00, 0x01, 0x22, 0x0a, 0x00, 0x30, 0x00},    /* 96K, 720p@50/1080i@50 */
		{0x00, 0x02, 0x25, 0x51, 0x00, 0x2d, 0x80},    /* 96K, 1080p@60 */
		{0x00, 0x02, 0x44, 0x14, 0x00, 0x30, 0x00},    /* 96K, 1080p@50 */
		{0x00, 0x01, 0xA5, 0xe0, 0x00, 0x30, 0x00},    /* 96K, 480p@108MHz/576p@108MHz */
		{0x00, 0x04, 0x4A, 0xA2, 0x00, 0x2D, 0x80},    /* 96K, 296.976m,4K2K */
		{0x00, 0x03, 0xC6, 0xCC, 0x00, 0x28, 0x80} /* 96K, 297m */
	},
	{	{0x00, 0x00, 0x75, 0x30, 0x00, 0x62, 0x00},    /* 176K, 480i/576i/480p@27MHz/576p@27MHz */
		{0x00, 0x00, 0xea, 0x60, 0x00, 0x62, 0x00},    /* 176K, 480p@54MHz/576p@54MHz */
		{0x00, 0x03, 0x93, 0x87, 0x01, 0x16, 0xb0},    /* 176K, 720p@60/1080i@60 */
		{0x00, 0x01, 0x42, 0x44, 0x00, 0x62, 0x00},    /* 176K, 720p@50/1080i@50 */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x8b, 0x58},    /* 176K, 1080p@60 */
		{0x00, 0x02, 0x84, 0x88, 0x00, 0x62, 0x00},    /* 176K, 1080p@50 */
		{0x00, 0x01, 0xd4, 0xc0, 0x00, 0x62, 0x00},    /* 176K, 480p@54MHz/576p@54MHz */
		{0x00, 0x03, 0x93, 0x87, 0x00, 0x45, 0xAC},    /* 176K, 296.976m,4K2K */
		{0x00, 0x03, 0xC6, 0xCC, 0x00, 0x49, 0x80} /* 176K, 297m */
	},
	{	{0x00, 0x00, 0x69, 0x78, 0x00, 0x60, 0x00},    /* 192K, 480i/576i/480p@27MHz/576p@27MHz */
		{0x00, 0x00, 0xd2, 0xf0, 0x00, 0x60, 0x00},    /* 192K, 480p@54MHz/576p@54MHz */
		{0x00, 0x02, 0x25, 0x51, 0x00, 0xb6, 0x00},    /* 192K, 720p@60/1080i@60 */
		{0x00, 0x01, 0x22, 0x0a, 0x00, 0x60, 0x00},    /* 192K, 720p@50/1080i@50 */
		{0x00, 0x02, 0x25, 0x51, 0x00, 0x5b, 0x00},    /* 192K, 1080p@60 */
		{0x00, 0x02, 0x44, 0x14, 0x00, 0x60, 0x00},    /* 192K, 1080p@50 */
		{0x00, 0x01, 0xA5, 0xe0, 0x00, 0x60, 0x00},    /* 192K, 480p@108MHz/576p@108MHz */
		{0x00, 0x04, 0x4A, 0xA2, 0x00, 0x5B, 0x00},    /* 192K, 296.976m,4K2K */
		{0x00, 0x03, 0xC6, 0xCC, 0x00, 0x50, 0x00} /* 192K, 297m */

	}
};

typedef enum {
	IEC_48K = 0,
	IEC_96K,
	IEC_192K,
	IEC_768K,
	IEC_44K,
	IEC_88K,
	IEC_176K,
	IEC_705K,
	IEC_16K,
	IEC_22K,
	IEC_24K,
	IEC_32K,


} IEC_FRAME_RATE_T;

typedef enum {
	HDMI_DEEP_COLOR_AUTO=0,
	HDMI_NO_DEEP_COLOR,
	HDMI_DEEP_COLOR_10_BIT,
	HDMI_DEEP_COLOR_12_BIT,
	HDMI_DEEP_COLOR_16_BIT
} HDMI_DEEP_COLOR_T;

typedef  enum {
	HDMI_RGB = 0,
	HDMI_RGB_FULL,
	HDMI_YCBCR_444,
	HDMI_YCBCR_422,
	HDMI_XV_YCC,
	HDMI_YCBCR_444_FULL,
	HDMI_YCBCR_422_FULL

} HDMI_OUT_COLOR_SPACE_T;

typedef  enum {
	HDMI_RJT_24BIT= 0,
	HDMI_RJT_16BIT,
	HDMI_LJT_24BIT,
	HDMI_LJT_16BIT,
	HDMI_I2S_24BIT,
	HDMI_I2S_16BIT
} HDMI_AUDIO_I2S_FMT_T;

typedef  enum {
	SV_I2S = 0,
	SV_SPDIF

} HDMI_AUDIO_INPUT_TYPE_T;

typedef enum {
	HDMI_FS_32K = 0,
	HDMI_FS_44K,
	HDMI_FS_48K,
	HDMI_FS_88K,
	HDMI_FS_96K,
	HDMI_FS_176K,
	HDMI_FS_192K

} HDMI_AUDIO_SAMPLING_T;

typedef enum {
	HDMI_PCM_16BIT=0,
	HDMI_PCM_20BIT,
	HDMI_PCM_24BIT

} HDMI_PCM_BIT_SIZE_T;

//void set_hdmi_tmds_driver(unsigned int resolutionmode);

typedef   struct _HDMI_AV_INFO_T {
	unsigned char ui1_aud_out_ch_number;
	HDMI_AUDIO_SAMPLING_T e_hdmi_fs;
	unsigned char bhdmiRChstatus[6];
	unsigned char bhdmiLChstatus[6];
	unsigned char u1HdmiI2sMclk;
	unsigned char e_hdmi_aud_in;
	unsigned char e_iec_frame;
}   HDMI_AV_INFO_T;

HDMI_AV_INFO_T _stAvdAVInfo;

void set_hdmi_tmds_driver(unsigned int resolutionmode, unsigned int deepcolor, unsigned int colorspace,unsigned int audiofs, unsigned int chnumber, unsigned int audiotype);
void dpi_enable_colorbar(unsigned dpi_id,unsigned enable);
unsigned int hdmi_get_width(void);
unsigned int hdmi_get_height(void);
extern void udelay(unsigned long usec);
extern void mdelay(unsigned long usec);
void hdmi_checkedid(unsigned char i1noedid);
unsigned int vOutputResolution(void);
#endif
